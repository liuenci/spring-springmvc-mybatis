<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.cier" annotation-config="true"/>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="2"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:datasource.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource">
            <bean class="com.alibaba.druid.pool.DruidDataSource">
                <property name="url"
                          value="${db.url}"/>
                <property name="username" value="${db.username}"/>
                <property name="password" value="${db.password}"/>
                <!-- 配置初始化大小、最小、最大 -->
                <property name="initialSize" value="1"/>
                <property name="minIdle" value="10"/>
                <property name="maxActive" value="30"/>
                <!-- 配置获取连接等待超时的时间 -->
                <property name="maxWait" value="60000"/>
                <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是
                毫秒 -->
                <property name="timeBetweenEvictionRunsMillis" value="60000"
                />
                <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
                <property name="minEvictableIdleTimeMillis" value="300000"/>
                <property name="testWhileIdle" value="false"/>
                <property name="testOnBorrow" value="false"/>
                <property name="testOnReturn" value="false"/>
                <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
                <property name="poolPreparedStatements" value="false"/>
                <property name="maxPoolPreparedStatementPerConnectionSize"
                          value="20"/>
                <property name="defaultAutoCommit" value="true"/>
                <property name="ValidationQueryTimeout" value="60000"/>
                <property name="validationQuery" value="select 1"/>
            </bean>
        </property>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mappers/*Mapper.xml"></property>

        <!-- 分页插件 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>

    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cier.dao"/>
    </bean>

    <!-- 使用@Transactional进行声明式事务管理需要声明下面这行 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    <!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>
</beans>